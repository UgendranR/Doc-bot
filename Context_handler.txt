/*
			Note : Authenticate Zoho Bookings connection by clicking Manage Connection Link at the bottom of the page
			Replace serviceId and staffId with the ones from your zoho bookings account.
			*/
serviceId = -1;
staffId = -1;
response = Map();
if(context_id.equals("schedule"))
{
	response.put("action","context");
	response.put("context_id","schedule");
	name = answers.get("name").get("text");
	if(!answers.containsKey("email"))
	{
		question = {"name":"email","replies":{"Your email address?"}};
	}
	else
	{
		email = answers.get("email").get("text");
		if(!answers.containsKey("phone"))
		{
			question = {"name":"phone","replies":{"Your mobile number?"}};
		}
		else
		{
			phone = answers.get("phone").get("text");
			if(!answers.containsKey("gender"))
			{
				slot = {"type":"select","options":{"Male","Female"}};
				question = {"name":"gender","replies":{"Please select your gender"},"input":slot};
			}
			else
			{
				company = answers.get("gender").get("text");
				if(!answers.containsKey("doctor"))
				{
					slt = {"type":"select","options":{"Ear","Nose","Throat"}};
					question = {"name":"doctor","replies":{"Thanks","You are looking for a doctor in which department?"},"input":slt};
				}
				else
				{
					company = answers.get("doctor").get("text");
					if(!answers.containsKey("visit"))
					{
						slt1 = {"type":"select","options":{"First Visit","Follow-Up Visit"}};
						question = {"name":"visit","replies":{"Are you visiting for the first time, or is it a follow-up visit?"},"input":slt1};
					}
					else
					{
						company = answers.get("visit").get("text");
						if(!answers.containsKey("date"))
						{
							slots = {"type":"calendar","time":true,"tz":true,"from":"+0","label":"Schedule a meeting","to":"+5","select_label":"Choose a slot"};
							question = {"name":"date","replies":{"When do you prefer to meet the doctor?","Would you like to pick a time slot as per your convenience?","Choose a suitable date and time"},"skippable":"true","input":slots};
						}
						else
						{
							date = answers.get("date");
							if(!date.get("text").equalsIgnoreCase("-"))
							{
								appointmentDate = date.get("text");
								if(!answers.containKey("slots"))
								{
									availableSlots = zoho.bookings.getAvailableSlots(serviceId,staffId,appointmentDate,"zoho_bookings");
									slots = availableSlots.get("response").get("returnvalue").get("data");
									if(slots.isEmpty())
									{
										response.put("action","end");
										response.put("replies",{"Sorry, we don't have a slots for that day"});
										return response;
									}
									else
									{
										question = {"name":"slots","replies":{"Please choose the following slots as for your convenience"},"suggestions":slots};
										response.put("questions",{question});
										return response;
									}
								}
								else
								{
									slots = answers.get("slots").get("text");
									appointmentDate = appointmentDate + " " + slots + ":00";
									if(!answers.containsKey("thanks"))
									{
										timeZone = "America/Los_Angeles";
										customerDetails = Map();
										customerDetails.put("name",name);
										customerDetails.put("email",email);
										customerDetails.put("phone_number",phone);
										apponitmentResponse = zoho.bookings.createAppointment(serviceId,appointmentDate,customerDetails,staffId,timeZone,true,"zoho_bookings");
										status = apponitmentResponse.get("response").get("status");
										if(status.equalsIgnoreCase("success"))
										{
											response.put("action","end");
											response.put("replies",{"You have successfully registered","Have a nice day"});
											return response;
										}
										else
										{
											response.put("action","end");
											response.put("replies",{"Sorry, error occured!"});
											return response;
										}
									}
									else
									{
										response.put("action","end");
										response.put("replies",{"Have a nice day"});
										return response;
									}
								}
							}
							else
							{
								response.put("action","end");
								response.put("replies",{"Have a nice day"});
								return response;
							}
						}
					}
				}
			}
		}
	}
	response.put("questions",{question});
}
else if(context_id.equals("nothing"))
{
	response.put("action","end");
	response.put("replies",{"I'll be here to assist you"});
}
return response;
